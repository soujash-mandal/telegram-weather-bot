<script>
  function blockUser(chatId) {
    if (confirm("Are you sure you want to block this user?")) {
      // Make an AJAX request to your server to update the blocked status
      fetch("/block-user", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({ chatId: chatId }),
      })
        .then((response) => response.json())
        .then((data) => {
          if (data.success) {
            alert(`User with Chat ID ${chatId} has been blocked.`);
            // Optionally, you can update the UI to reflect the blocked status.
          } else {
            alert("Failed to block user.");
          }
        })
        .catch((error) => {
          console.error("Error:", error);
          alert("An error occurred while blocking the user.");
        });
    }
  }

  function unBlockUser(chatId) {
    if (confirm("Are you sure you want to unblock this user?")) {
      // Make an AJAX request to your server to update the blocked status
      fetch("/unblock-user", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({ chatId: chatId }),
      })
        .then((response) => response.json())
        .then((data) => {
          if (data.success) {
            alert(`User with Chat ID ${chatId} has been unblocked.`);
            // Optionally, you can update the UI to reflect the blocked status.
          } else {
            alert("Failed to unblock user.");
          }
        })
        .catch((error) => {
          console.error("Error:", error);
          alert("An error occurred while unblocking the user.");
        });
    }
  }

  function deleteUser(chatId) {
    if (confirm("Are you sure you want to delete this user?")) {
      // Make an AJAX request to your server to update the deleted status
      fetch("/delete-user", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({ chatId: chatId }),
      })
        .then((response) => response.json())
        .then((data) => {
          if (data.success) {
            alert(`User with Chat ID ${chatId} has been deleted.`);
            // Optionally, you can update the UI to reflect the deleted status.
          } else {
            alert("Failed to delete user.");
          }
        })
        .catch((error) => {
          console.error("Error:", error);
          alert("An error occurred while deleting the user.");
        });
    }
  }

  function requestAdminAccess(email, requested) {
    if (
      confirm(
        requested
          ? "Want apply For Admin Role?"
          : "Want to Cancel Request For Admin Role?"
      )
    ) {
      // Make an AJAX request to your server to update the deleted status
      fetch("/apply-admin", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({ email, requested }),
      })
        .then((response) => response.json())
        .then((data) => {
          if (data.success) {
            alert(
              requested
                ? `your email ID ${email} has been applied`
                : ` email ID ${email} request was successfully cancelled`
            );
            // Optionally, you can update the UI to reflect the deleted status.
          } else {
            alert("Failed");
          }
        })
        .catch((error) => {
          console.error("Error:", error);
          alert("An error occurred");
        });
    }
  }

  function makeAdmin(email) {
    if (confirm(`Are you sure you want to make ${email} admin?`)) {
      // Make an AJAX request to your server to update the deleted status
      fetch("/make-admin", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({ email }),
      })
        .then((response) => response.json())
        .then((data) => {
          if (data.success) {
            alert(`User with email Id ${email} has been made Admin.`);
            // Optionally, you can update the UI to reflect the deleted status.
          } else {
            alert("Failed to make user admin.");
          }
        })
        .catch((error) => {
          console.error("Error:", error);
          alert("An error occurred while user converting to Admin.");
        });
    }
  }


</script>
